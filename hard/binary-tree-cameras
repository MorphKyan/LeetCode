/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode(int x) : val(x), left(NULL), right(NULL) {}
 * };
 */
// 从下面往上走 LRD后序遍历
class Solution {
public:
    int ans;
    int minCameraCover(TreeNode* root) {
        ans=0;
        // 返回的如果是0说明root未覆盖，所以+1
        if(LRD(root)==0){
            ++ans;
        }
        return ans;
    }

    // 0 未覆盖
    // 1 已覆盖
    // 2 安了摄像头
    int LRD(TreeNode* root){
        if(root==NULL) return 1;
        int left=LRD(root->left);
        int right=LRD(root->right);
        // 左或右没覆盖只能靠root了
        if(left==0||right==0){
            ++ans;
            return 2;
        }
        // 左或右装了摄像头 root就是覆盖了的
        if(left+right>=3){
            return 1;
        }
        // 左右都覆盖了 root是没覆盖
        if(left==1&&right==1){
            return 0;
        }
        return -1;
    }
};
