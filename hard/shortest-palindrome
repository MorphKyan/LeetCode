// 字符串哈希
// 我们将字符串看成一个base进制的数，它对应的十进制值就是哈希值
// 如果字符串本身很长，其对应的十进制值在大多数语言中无法使用内置的整数类型进行存储。因此，我们会将十进制值对一个大质数mod进行取模。
// 一般来说，我们选取一个大于字符集大小（即字符串中可能出现的字符种类的数目）的质数作为base，再选取一个在字符串长度平方级别左右的质数作为mod，产生哈希碰撞的概率就会很低。

class Solution {
public:
    string shortestPalindrome(string s) {
        int n=s.size();
        int base=131,mod=1000000007;
        int left=0,right=0,mul=1;
        int best=-1;
        for(int i=0;i<n;++i){
            // 类似二进制从高位和低位进行转成10进制计算
            left=((long long)left*base+s[i])%mod; // 加的是最低位 不写longlong会溢出
            right=(right+(long long)mul*s[i])%mod; // 加的是最高位
            if(left==right){
                best=i;
            }
            mul=(long long)mul*base%mod; //base^i
        }
        string add=(best==n-1? "":s.substr(best+1,n));
        reverse(add.begin(),add.end());
        return add+s;
    }
};
