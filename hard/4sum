class Solution {
public:
    vector<vector<int>> fourSum(vector<int>& nums, int target) {
        vector<vector<int>> ans;
        if(nums.size()<4) return ans;
        sort(nums.begin(),nums.end());
        int len=nums.size();
        for(int i=0;i<len-3;++i){
            // 跳过重复
            if(i>0&&nums[i]==nums[i-1]) continue;
            // 剪枝
            if(nums[i]+nums[i+1]+nums[i+2]+nums[i+3]>target) break;
            if(nums[i]+nums[len-3]+nums[len-2]+nums[len-1]<target) continue;
            for(int j=i+1;j<len-2;++j){
                if(j>i+1&&nums[j]==nums[j-1]) continue;
                if(nums[i]+nums[j]+nums[j+1]+nums[j+2]>target) break;
                if(nums[i]+nums[j]+nums[len-2]+nums[len-1]<target) continue;
                int l=j+1,r=len-1;
                while(l<r){
                    int sum=nums[i]+nums[j]+nums[l]+nums[r];
                    if(sum==target){
                        ans.push_back({nums[i],nums[j],nums[l],nums[r]}); // 这种括号的貌似必须push_back,不能用emplace_back
                        // 把一样的跳过
                        while(l<r&&nums[l]==nums[l+1]){
                            ++l;
                        }
                        ++l;
                        while(l<r&&nums[r]==nums[r-1]){
                            --r;
                        }
                        --r;
                    }
                    else if(sum<target) ++l;
                    else --r;
                }
            }
        }
        return ans;
    }
};
