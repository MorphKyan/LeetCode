/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
// 最简单的递归 还有更多高级方法有待学习
class Solution {
public:
    bool isSubtree(TreeNode* s, TreeNode* t) {
        if(!s&&t) return false;
        return helper(s,t)||isSubtree(s->left,t)||isSubtree(s->right,t);
    }

    bool helper(TreeNode* s,TreeNode* t){
        if(!s&&!t) return true;
        return s&&t&&s->val==t->val&&helper(s->left,t->left)&&helper(s->right,t->right);
    }
};
