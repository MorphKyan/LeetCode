/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode(int x) : val(x), left(NULL), right(NULL) {}
 * };
 */
class Solution {
public:
// 自顶向下
    bool isBalanced1(TreeNode* root) {
        if(!root) return true;
        return isBalanced(root->left)&&isBalanced(root->right)&&
        abs(height(root->left)-height(root->right))<2;
    }

    int height(TreeNode* t){
        if(!t) return -1;
        return 1+max(height(t->left),height(t->right));
    }

// 自底向上，不进行重复的height计算
    bool isBalanced(TreeNode* root){
        int height;
        return helper(root,height);
    }

    bool helper(TreeNode* t,int& height){
        if(!t){
            height=-1;
            return true;
        }
        int left,right;
        if (helper(t->left,left)&&helper(t->right,right)&&
        abs(left-right)<2){
            height=max(left,right)+1;
            return true;
        }
        return false;
    }
};
