// DP解法 考虑的是选i或j能最多比对面多得多少分，因为有先手权所以看第一行最后一个就行
class Solution {
public:
    bool stoneGame(vector<int>& piles) {
        int n=piles.size();
        vector<vector<int>> dp(n,vector<int>(n));
        for(int i=0;i<n;++i){
            dp[i][i]=piles[i];
        }
        for(int i=n-2;i>=0;--i){
            for(int j=i+1;j<n;++j){
                dp[i][j]=max(piles[i]-dp[i+1][j],piles[j]-dp[i][j-1]);
            }
        }
        return dp[0][n-1]>0;
    }
};

// 根据数学还可以直接return true
class Solution {
public:
    bool stoneGame(vector<int>& piles) {
        return true;
    }
};
