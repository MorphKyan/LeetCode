// 先排序，三重循环，使用双指针优化到O(N^2)
class Solution {
public:
    vector<vector<int>> threeSum(vector<int>& nums) {
        int size=nums.size();
        vector<vector<int>> ans;
        sort(nums.begin(),nums.end());
        for(int i=0;i<size;++i){
            // 这个数和上一个一样就跳过
            if(i>0&&nums[i]==nums[i-1]) continue;
            int k=size-1;
            for(int j=i+1;j<size;++j){
                // 数不能重复
                if(j>i+1&&nums[j]==nums[j-1]) continue;
                while(k>j&&nums[k]+nums[i]+nums[j]>0){
                    --k;
                }
                if(j==k) break;
                if(nums[k]+nums[i]+nums[j]==0){
                    ans.push_back({nums[i],nums[j],nums[k]});
                }
            }
        }
        return ans;
    }
};
