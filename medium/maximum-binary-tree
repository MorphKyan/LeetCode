/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
// 练习一下框架
class Solution {
public:
    TreeNode* constructMaximumBinaryTree(vector<int>& nums) {
        return build(nums,0,nums.size()-1);
    }

    TreeNode* build(vector<int>& nums,int l,int r){
        if(l>r) return NULL;
        int max=INT_MIN;
        int idx=-1;
        for(int i=l;i<=r;++i){
            if(nums[i]>max){
                max=nums[i];
                idx=i;
            }
        }
        TreeNode* root=new TreeNode(max);
        root->left=build(nums,l,idx-1);
        root->right=build(nums,idx+1,r);
        return root;
    }
};
