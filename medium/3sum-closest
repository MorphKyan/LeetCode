// 同15题，N^3优化成N^2，用双指针
class Solution {
public:
    int threeSumClosest(vector<int>& nums, int target) {
        int size=nums.size();
        sort(nums.begin(),nums.end());
        int ans=nums[0]+nums[1]+nums[2];
        for(int i=0;i<size;++i){
            if(i>0&&nums[i]==nums[i-1]) continue;
            int j=i+1,k=size-1;
            while(j<k){
                int sum=nums[i]+nums[j]+nums[k];
                if(sum==target) return target;
                if(abs(ans-target)>abs(sum-target)){
                    ans=sum;
                }
                // 主要是下面判断把第三层循环省了
                if(sum>target){
                    int k_new=k-1;
                    while(j<k_new&&nums[k_new]==nums[k]){
                        --k_new;
                    }
                    k=k_new;
                }else{
                    int j_new=j+1;
                    while(j_new<k&&nums[j_new]==nums[j]){
                        ++j_new;
                    }
                    j=j_new;
                }
            }
        }
        return ans;
    }
};
