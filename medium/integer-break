// 动态规划 后面的仅需要前面的，一直推到需要求的就行
// 主要是能把整数拆分问题化为动态规划
class Solution {
public:
    int integerBreak(int n) {
        vector<int> dp(n+1);
        for(int i=2;i<=n;++i){
            for(int j=i-1;j>0;--j){
                dp[i]=max(dp[i],max(j*(i-j),j*dp[i-j]));
            }
        }
        return dp[n];
    }
};
