/**
 * Definition for singly-linked list.
 * struct ListNode {
 *     int val;
 *     ListNode *next;
 *     ListNode(int x) : val(x), next(NULL) {}
 * };
 */
 // 使用两个string存储
class Solution {
public:
    ListNode* addTwoNumbers(ListNode* l1, ListNode* l2) {
        string s1,s2;
        ListNode *p;
        p=l1;
        while(p){
            s1+=p->val+'0';
            p=p->next;
        }
        p=l2;
        while(p){
            s2+=p->val+'0';
            p=p->next;
        }
        int minlen=min(s1.length(),s2.length());
        if(s1.length()<s2.length()){
            s1.insert(0,s2.length()-s1.length(),'0');
        }
        if(s1.length()>s2.length()){
            s2.insert(0,s1.length()-s2.length(),'0');
        }
        ListNode *res=NULL;
        int sup=0;
        for(int i=s1.length()-1;i>=0;--i){
            int tmp=s1[i]+s2[i]-2*'0'+sup;
            ListNode *x;
            if(tmp>9){
                sup=1;
                x=new ListNode(tmp-10);
            }else{
                sup=0;
                x=new ListNode(tmp);
            }
            x->next=res;
            res=x;
        }
        if(sup){
            ListNode *x=new ListNode(1);
            x->next=res;
            res=x;
        }
        return res;
    }
};
