/**
 * Definition for singly-linked list.
 * struct ListNode {
 *     int val;
 *     ListNode *next;
 *     ListNode() : val(0), next(nullptr) {}
 *     ListNode(int x) : val(x), next(nullptr) {}
 *     ListNode(int x, ListNode *next) : val(x), next(next) {}
 * };
 */
// 双指针
class Solution {
public:
    ListNode* removeNthFromEnd(ListNode* head, int n) {
        ListNode* dummy=new ListNode(0,head); // 哑节点
        ListNode* first=head;
        ListNode* second=dummy;
        // first 先走n步
        for(int i=0;i<n;++i){
            first=first->next;
        }
        // 一起走
        while(first){
            first=first->next;
            second=second->next;
        }
        second->next=second->next->next;
        ListNode* ans=dummy->next;
        delete dummy;
        return ans; // 这里不能用root，如果例子是只有一个并且要删除倒数第一个，这时候应该删去head这个节点，所以应该返回null，如果返回root就错了
    }
};
