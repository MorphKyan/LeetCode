class Solution {
public:
    bool check(vector<vector<char>>& board,vector<vector<bool>>& visited,int i,int j,string& s,int k){
        if(board[i][j]!=s[k]) return false;
        else if(k==s.size()-1) return true;
        visited[i][j]=true;
        int dx[4]={0,0,1,-1};
        int dy[4]={1,-1,0,0};
        bool res=false;
        for(int m=0;m<4;++m){
            int nx=i+dx[m],ny=j+dy[m];
            if(nx>=0&&nx<board.size()&&ny>=0&&ny<board[0].size()){
                if(!visited[nx][ny]){
                    bool flag=check(board,visited,nx,ny,s,k+1);
                    if(flag){
                        res=true;
                        break;
                    }
                }
            }
        }
        visited[i][j]=false; // 恢复
        return res;
    }
    bool exist(vector<vector<char>>& board, string word) {
        int m=board.size(),n=board[0].size();
        vector<vector<bool>> visited(m,vector<bool>(n));
        for(int i=0;i<m;++i){
            for(int j=0;j<n;++j){
                if(check(board,visited,i,j,word,0)) return true;
            }
        }
        return false;
    }
};
