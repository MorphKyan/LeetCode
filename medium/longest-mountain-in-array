// 先左后右 看一边能延申出来多少 再最后加一起然后+1
class Solution {
public:
    int longestMountain(vector<int>& A) {
        int n=A.size();
        if(n==0) return 0;
        vector<int> left(n);
        for(int i=1;i<n;++i){
            left[i]=A[i-1]<A[i]? left[i-1]+1:0;
        }
        vector<int> right(n);
        for(int i=n-2;i>=0;--i){
            right[i]=A[i]>A[i+1]? right[i+1]+1:0;
        }
        int ans=0;
        for(int i=0;i<n;++i){
            if(left[i]>0&&right[i]>0){
                ans=max(ans,left[i]+right[i]+1);
            }
        }
        return ans;
    }
};
