class Solution {
private:
    int sumValue(int x){
        int res=0;
        while(x>0){
            res+=x%10;
            x/=10;
        }
        return res;
    }
public:
    int movingCount(int m, int n, int k) {
        int res=1;
        int dx[2]={0,1},dy[2]={1,0};
        bool check[m][n];
        memset(check,false,sizeof(check)); // 还是这样初始化比较通用- -、
        queue<pair<int,int>> q;
        check[0][0]=true;
        q.push({0,0});
        while(!q.empty()){
            auto [x,y]=q.front();
            q.pop();
            for(int i=0;i<2;++i){
                int nx=x+dx[i],ny=y+dy[i];
                if(nx<0||nx>=m||ny<0||ny>=n||sumValue(nx)+sumValue(ny)>k||check[nx][ny]) continue;
                q.push({nx,ny});
                check[nx][ny]=true;
                ++res;
            }
        }
        return res;
    }
};
