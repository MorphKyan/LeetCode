class Solution {
public:
    void rotate(vector<vector<int>>& matrix) {
        int m=matrix.size();
        // 上下翻转
        for(int i=0;i<m/2;++i){
            for(int j=0;j<m;++j){
                int tmp=matrix[m-i-1][j];
                matrix[m-i-1][j]=matrix[i][j];
                matrix[i][j]=tmp;
            }
        }

        // 对角线翻转
        for(int i=0;i<m;++i){
            for(int j=i+1;j<m;++j){
                int tmp=matrix[i][j];
                matrix[i][j]=matrix[j][i];
                matrix[j][i]=tmp;
                // 还可以这样写
                //swap(matrix[i][j], matrix[j][i]);
            }
        }
    }
};

// 还有一种只遍历左上角元素
class Solution {
public:
    void rotate(vector<vector<int>>& matrix) {
        int n = matrix.size();
        if(n == 0) { return; }
        int r = (n>>1)-1; //左上角区域的最大行下标，
        int c = (n-1)>>1; //左上角区域的最大列下标，行列下标从 0 开始。
        for(int i = r; i >= 0; --i) {
            for(int j = c; j >= 0; --j) {
                swap(matrix[i][j], matrix[j][n-i-1]);
                swap(matrix[i][j], matrix[n-i-1][n-j-1]);
                swap(matrix[i][j], matrix[n-j-1][i]);
            }
        }
    }
};
