// 滑动窗口
class Solution {
public:
    string minWindow(string s, string t) {
        unordered_map<char,int> need, window;
        for(char c:t) ++need[c];

        int l=0,r=0;
        int valid=0;

        int start=0,len=INT_MAX;
        while(r<s.size()){
            // c是移入字符
            char c=s[r];
            ++r;

            // 窗口数据更新
            if(need.count(c)){
                ++window[c];
                if(window[c]==need[c])
                    ++valid;
            }

            // 判断左侧是否要收缩
            while(valid==need.size()){
                // 结果更新
                if(r-l<len){
                    start=l;
                    len=r-l;
                }
                // d是移出字符
                char d=s[l];
                ++l;

                // 窗口数据更新
                if(need.count(d)){
                    if(window[d]==need[d]) --valid;
                    --window[d];
                }
            }
        }
        return len==INT_MAX? "":s.substr(start,len);
    }
};
