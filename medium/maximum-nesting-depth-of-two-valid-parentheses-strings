class Solution {
public:
    vector<int> maxDepthAfterSplit1(string seq) {
        vector<int> deep(1);
        if(seq[0]=='(') deep[0]=1;
        bool m=false;
        int max_depth=0;
        for(int i=1;i<seq.length();++i){
            if(seq[i]=='('&&m){
                deep.push_back(deep[i-1]);
                m=false;
            }
            else if(seq[i]=='('&&!m){
                deep.push_back(deep[i-1]+1);
            }
            else if(seq[i]==')'&&!m){
                deep.push_back(deep[i-1]);
                m=true;
            }
            else if(seq[i]==')'&&m){
                deep.push_back(deep[i-1]-1);
                m=true;
            }
            max_depth=max(max_depth,deep[i]);
        }
        max_depth/=2;
        for(int i=0;i<seq.length();++i){
            if(deep[i]<=max_depth) deep[i]=0;
            else deep[i]=1;
        }
        return deep;
    }

// 奇数入A，偶数入B
    vector<int> maxDepthAfterSplit(string seq) {
        int d = 0;
        vector<int> ans;
        for (char& c : seq)
            if (c == '(') {
                ++d;
                ans.push_back(d % 2);
            }
            else {
                ans.push_back(d % 2);
                --d;
            }
        return ans;
    }
};
