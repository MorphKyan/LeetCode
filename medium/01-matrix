// 图的BFS要一次性把所有原点入队，可以进行反向思考
class Solution {
public:
    vector<vector<int>> updateMatrix(vector<vector<int>>& matrix) {
        int m=matrix.size(),n=matrix[0].size();
        bool check[m][n];
        memset(check,false,sizeof(check));
        int dx[4]={0,0,1,-1},dy[4]={1,-1,0,0};
        queue<pair<int,int>> q;
        // 一次性把所有原点都入队
        for(int i=0;i<m;++i){
            for(int j=0;j<n;++j){
                if(matrix[i][j]==0){
                    check[i][j]=true;
                    q.emplace(i,j);
                }
            }
        }

        while(!q.empty()){
            auto [i,j]=q.front();q.pop();
            for(int d=0;d<4;++d){
                int nx=i+dx[d],ny=j+dy[d];
                if(nx>=0&&nx<m&&ny>=0&&ny<n&&!check[nx][ny]){
                    matrix[nx][ny]=matrix[i][j]+1;
                    q.emplace(nx,ny);
                    check[nx][ny]=true;
                }
            }
        }
        return matrix;
    }
};
