/**
 * Definition for singly-linked list.
 * struct ListNode {
 *     int val;
 *     ListNode *next;
 *     ListNode() : val(0), next(nullptr) {}
 *     ListNode(int x) : val(x), next(nullptr) {}
 *     ListNode(int x, ListNode *next) : val(x), next(next) {}
 * };
 */
/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
public:
    // 快慢指针找中点
    ListNode* getMid(ListNode* l,ListNode* r){
        ListNode* slow=l;
        ListNode* fast=l;
        while(fast!=r&&fast->next!=r){
            fast=fast->next->next;
            slow=slow->next;
        }
        return slow;
    }

    // 左闭右开
    TreeNode* buildTree(ListNode* l,ListNode* r){
        if(l==r) return nullptr;
        ListNode* mid=getMid(l,r);
        TreeNode* root=new TreeNode(mid->val);
        root->left=buildTree(l,mid);
        root->right=buildTree(mid->next,r); // 左闭右开 方便这里用next
        return root;
    }

    TreeNode* sortedListToBST(ListNode* head) {
        return buildTree(head,nullptr);    
    }
};
